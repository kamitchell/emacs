Instructions to create pretest or release tarballs.
-- originally written by Gerd Moellmann, amended by Francesco Potortì
   with the initial help of Eli Zaretskii

For each step, check for possible errors.

1.   cvs -q update -Pd

2.  Bootstrap to make 100% sure all elc files are up-to-date, and to
    make sure that the later tagged version will bootstrap, should it be
    necessary to check it out.

3.  Regenerate Emacs' etc/AUTHORS file (M-x load-file RET
    lisp/emacs-lisp/authors.el RET, then M-x authors RET, then save
    the *Authors* buffer).  This may require fixing syntactically
    incorrect ChangeLog entries beforehand.

4.  Set the version number (M-x load-file RET admin/admin.el RET, then
    M-x set-version RET).  For a release, add released change log
    entries (M-x add-release-logs RET).

    For a pretest, start at version .90.  After .99, use .990 (so that
    it sorts).

5.   rm configure; make bootstrap

6.  Commit configure, README, doc/emacs/emacs.texi,
    doc/lispref/elisp.texi, etc/AUTHORS, lisp/version.el,    
    nt/emacs.rc.  Copy lisp/loaddefs.el to
    lisp/ldefs-boot.el and commit lisp/ldefs-boot.el.  For a release,
    also commit the ChangeLog files in all directories.

7.   make-dist --snapshot.  Check the contents of the new tar with
     admin/diff-tar-files against an older tar file.  Some old pretest
    tarballs are kept under fencepost.gnu.org:~pot/emacs-pretest/, while
    old emacs tarballs are at <ftp://ftp.gnu.org/pub/gnu/emacs/>.

    If this is the first pretest of a major release, just comparing
    with the previous release may overlook many new files.  You can try
    something like `find -f | grep -v CVS...etc' in a clean CVS tree,
    and compare the results against the new tar contents.

8.   xdelta delta emacs-OLD.tar.gz emacs-NEW.tar.gz emacs-OLD-NEW.xdelta

9.   tar -zxf emacs-NEW.tar.gz; cd emacs-NEW
     ./configure && make && make -n install
    Use `script' or M-x compile to save the compilation log in
    compile-NEW.log and compare it against an old one.  The easiest way
    to do that is to visit the old log in Emacs, change the version
    number of the old Emacs to __, do the same with the new log and do
    M-x ediff.  Especially check that Info files aren't built.

10.  cd EMACS_ROOT_DIR; cvs tag TAG
    TAG is EMACS_PRETEST_XX_YY_ZZZ for a pretest, EMACS_XX_YY for a
    release.

    Shortly before the release, cut the branch with the following commands:

    cvs rtag EMACS_`NUMBER'_BASE
    cvs rtag -b EMACS_`NUMBER'_RC -r EMACS_`NUMBER'_BASE

    where `NUMBER' is the major version number of the release.  This
    makes it easier to see what changes have been applied to the
    branch with:

    cvs diff -r EMACS_`NUMBER'_BASE -r EMACS_`NUMBER'_RC

    or merge changes back to the trunk with "cvs update -j", if
    necessary.

    After doing this, increase the version number on the trunk as per
    step 4.

11. Now you should upload the files to the GNU ftp server.  In order to
    do that, you must be registered as an Emacs maintainer and have your
    GPG key acknowledged by the ftp people.  Mail <ftp-upload@gnu.org>
    for instructions.  Once you are there, for each file FILE to be
    released, create a detached GPG binary signature and a clearsigned
    directive file like this:
     gpg -b FILE
     echo directory: emacs/pretest > FILE.directive      (for a pretest)
     echo directory: emacs > FILE.directive              (for a release)
     gpg --clearsign FILE.directive
    Upload by anonymous ftp to ftp://ftp-upload.gnu.org/ the files FILE,
    FILE.sig, FILE.directive.asc.
    For a release, place the files in the /incoming/ftp directory.
    For a pretest, place the files in /incoming/alpha instead, so that
    they appear on ftp://alpha.gnu.org/.

    For a release, upload a bz2 tarfile as well; this can save a lot
    of bandwidth.

12. After five minutes, verify that the files are visible at
    ftp://alpha.gnu.org/gnu/emacs/pretest/ for a pretest, at
    ftp://ftp.gnu.org/gnu/emacs/ for a release.

13. For a pretest, announce it on emacs-devel and BCC the pretesters.
    For a release, announce it on info-gnu@gnu.org,
    info-gnu-emacs@gnu.org, and emacs-devel.


# arch-tag: c23c771f-ca26-4584-8a04-50ecf0989390
