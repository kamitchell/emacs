ttn 2004-05-09

The exit value of a program returning to the shell on unixoid systems is
typically 0 for success, and non-0 (such as 1) for failure.  For vms it is
odd (1,3,5...) for success, even (0,2,4...) for failure.

This holds from the point of view of the "shell" (in quotes because vms has a
different dispatch model that is not explained further here).

From the point of view of the program, nowadays stdlib.h on both type of
systems provides macros `EXIT_SUCCESS' and `EXIT_FAILURE' that should DTRT.

NB: The numerical values of these macros DO NOT need to fulfill the the exit
value requirements outlined in the first paragraph!  That is the job of the
`exit' function.  Thus, this kind of construct shows misunderstanding:

   #ifdef VMS
      exit (1);
   #else
      exit (0);
   #endif

Values aside from EXIT_SUCCESS and EXIT_FAILURE are tricky.
