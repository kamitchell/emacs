GNU Emacs NEWS -- history of user-visible changes.

Copyright (C) 2007, 2008 Free Software Foundation, Inc.
See the end of the file for license conditions.

Please send Emacs bug reports to emacs-pretest-bug@gnu.org.
If possible, use M-x report-emacs-bug.

This file is about changes in Emacs version 23.

See files NEWS.22, NEWS.21, NEWS.20, NEWS.19, NEWS.18, and NEWS.1-17
for changes in older Emacs versions.

You can narrow news to a specific version by calling `view-emacs-news'
with a prefix argument or by typing C-u C-h C-n.

Temporary note:
 +++ indicates that the appropriate manual has already been updated.
 --- means no change in the manuals is called for.
When you add a new item, please add it without either +++ or ---
so we will look at it and add it to the manual.


* About external Lisp packages


* Installation Changes in Emacs 23.1

** The default X toolkit is now Gtk+, rather than Lucid.

** Fonts are handled by new code capable of dealing with multiple font
backends.  This requires the freetype and fontconfig libraries, and
supports local fonts (fonts installed on the machine where Emacs is
running).  Additionally, the Xft library can be used for antialiasing
support, the otf library for complex text layout by OpenType fonts,
and the m17n library for text shaping.  Fontconfig-like font names
(e.g. monospace-12) are accepted.  The old font handling code can
be used by passing the configure option `--disable-font-backend'
(also available as a run-time option).

** The new configuration option "--with-dbus" enables D-Bus language
bindings for Emacs.

** The Mac Carbon port is no longer supported.
Instead, use... [FIXME what?]

** configure now checks for libgif before libungif when searching for
a GIF library.

** Support for systems without alloca has been removed.

** Support for Sun windows has been removed.

** Support for many obsolete platforms has been removed.
See the list at the end of etc/MACHINES for details.

** The `emacstool' utility has been removed.

** The configure options `--with-gcc', `--without-gcc' have been removed.
Configure will use gcc by default.  Set the CC environment variable if
you need control over which C compiler is used.

** The configure option `--with-gtk' has been removed.  Gtk is now the
default toolkit, but you can use --with-x-toolkit=gtk if necessary.

* Changes in Emacs 23.1

** Emacs now supports using both X displays and ttys in one session.
Start the server (M-x server-start).  Then `emacsclient -t' creates a
tty frame connected to the running emacs server.  You can also use any
number of different ttys.  `emacsclient -c' creates a new X11 frame on
the current $DISPLAY or a tty frame if $DISPLAY is not set.

You can test for the presence of this feature in your Lisp code by
testing for the `multi-tty' feature.

** The Emacs character set is now a superset of Unicode.
(It has about four times the code space, which should be plenty).

The internal encoding used for buffers and strings is now
Unicode-based and called `utf-8-emacs'.  utf-8-emacs is backwards
compatible with the UTF-8 encoding of Unicode.  The `emacs-mule'
coding system can still read and write data in the old internal encoding.

Since the internal encoding is also used by default for byte-compiled
files -- i.e. the normal coding system for byte-compiled Lisp files is
now utf-8-Emacs -- Lisp containing non-ASCII characters which is
compiled by Emacs 23 can't be read by earlier versions of Emacs.  Files
compiled by Emacs 20, 21, or 22 are loaded correctly as emacs-mule
(whether or not they contain multibyte characters), which makes loading
them somewhat slower than Emacs 23-compiled files.  Thus it may be worth
recompiling existing .elc files which don't need to be shared with older
Emacsen.

** There are assorted new coding systems/aliases -- see M-x list-coding-systems.

** There is a new charset implementation with many new charsets.
See M-x list-character-sets.  New charsets can be defined conveniently
as tables of unicodes.

The dimension of a charset is now 1, 2, 3, or 4, and the size of each
dimension is no longer limited to 94 or 96.

A dynamic charset priority list is used to infer the charset of
characters for display.

** There are new Chinese-GBK, Chinese-GB18030, Khmer, Bengali,
Punjabi, Gujarati, Oriya, Telugu, Sinhala, and TaiViet language
environments.

** Emacs now supports the XEmbed specification.
You can embed Emacs in another application on X11.  The new command line option
--parent-id is used to pass the parent window id to Emacs.  See
http://standards.freedesktop.org/xembed-spec/xembed-spec-latest.html
for details about XEmbed.

** Emacs comes with a new set of default icons.
Various resolutions are available as etc/images/icons/hicolor/*/apps/emacs.png.
The Emacs 22 icon is available as `emacs22.png' in the same location.

** Built-in functions (subr) can now have an interactive specification
that is not a prompt string.  If the `intspec' parameter of a `DEFUN'
starts with a `(', the string is evaluated as a Lisp form.

** set-file-modes is now interactive and can take the mode value in
symbolic notation thanks to auxiliary functions.

** split-window-preferred-function specifies whether display-buffer should
split windows vertically or horizontally.

** Emacsclient has been extended to support opening a new terminal
frame.  Its behavior has been changed to open a new Emacs frame by
default.  Use the -c option to get the old behavior of opening files in
the currently selected Emacs frame.

** The refcards are now shipped as PDF files.

** Emacs now supports the SVG image format through librsvg2.

** C-SPC C-SPC in transient-mark-mode pushes a mark without activating it.

** If you set find-file-confirm-nonexistent-file to t, then C-x C-f
requires confirmation before opening a non-existent file.

** If the gpm mouse server is running and t-mouse-mode enabled, Emacs uses a
Unix socket in a GNU/Linux console to talk to server, rather than faking events
using the client program mev.  This C level approach provides mouse
highlighting, and help echoing in the minibuffer.

** The new variable next-error-recenter specifies how next-error should
recenter the visited source file.  Its value can be a number (for example,
0 for top line, -1 for bottom line), or nil for no recentering.

** New command recenter-top-bottom moves the current line to window
center, top and bottom on successive invokations.

** C-l is bound to the new command recenter-top-bottom, rather than recenter.

** The mode-line displays a `@' if the default-directory for the current buffer
is on a remote machine, or a hyphen otherwise.

** The mode-line displays a mode menu when mouse-1 is clicked on a minor mode,
in the same way as it already did for major modes.

** The new command balance-windows-area balances windows both vertically
and horizontally.

** The new command close-display-connection can be used to close a connection
to a remote display, e.g. because the display is about to become unreachable.

** The command shell prompts for the default directory, when it is
called with a prefix, and the default directory is a remote file name.
This is because some file name handlers (like ange-ftp) are not able to
run processes remotely.

** The new command `display-time-world' starts an updating time display
using several time zones, in a buffer.

** The new function `format-seconds' converts a number of seconds into a
readable string of days, hours, etc.

** The new variables `before-init-time' and `after-init-time' record the
value of `current-time' before and after Emacs loads the init files.

** The new function `emacs-uptime' returns the uptime of an Emacs instance.

** The new function `emacs-init-time' returns the duration of the
Emacs initialization.

** The minor modes unify-8859-on-encoding-mode, unify-8859-on-decoding-mode
are obsolete.


* Startup Changes in Emacs 23.1

** New user option `initial-buffer-choice' specifies what to display
after starting Emacs: startup screen, *scratch* buffer, visiting a
file or directory.

** New alias `argv' for `command-line-args-left'
This is a convenience alias, so that one can write `(pop argv)'
inside of --eval command line arguments in order to access
following arguments.

** The new command-line option `--disable-font-backend' disables the
new font backend code at runtime.  This option is not available if
Emacs was compiled without font-backend support.

** The abbrev file is no longer read at startup in batch mode.

* Incompatible Editing Changes in Emacs 23.1

+++
** In Dired-x, all command guesses for ! are now added to the default
list accessible by M-n instead of pushing all guesses temporarily into
the history list.


* Editing Changes in Emacs 23.1

+++
** C-M-% now shows replacement as it would look in the buffer, with
`\N' and `\&' substituted according to the match.  Old behavior can be
restored by customizing `query-replace-show-replacement'.

+++
** M-q now fills the region if the region is active and
`transient-mark-mode' is turned on.  Otherwise, it fills the current
paragraph.

+++
** M-$ now checks spelling of the region if the region is active and
`transient-mark-mode' is turned on.  Otherwise, it checks spelling of the
word at point.

** TAB now indents the region if the region is active and
`transient-mark-mode' is turned on.

** `use-empty-active-region' controls whether an empty active region
in Transient Mark mode should make commands operate on that empty region.

** C-z now invokes `suspend-frame', C-x C-c now invokes
`save-buffers-kill-terminal'.

** New command kill-matching-buffers kills buffers whose name matches a regexp.

** You can disable kill ring commands from accessing the primary selection
by setting `x-select-enable-primary' to nil.

** If `select-active-regions' is t, setting the mark automatically
makes the new region into the primary selection (for interaction with
other window applications).  If you enable this, you might want to bind
`mouse-yank-primary' to Mouse-2.

** If `yank-pop-change-selection' is t, rotating the kill ring
also updates the selection or clipboard to the current yank,
just as M-w would do so with the text it copies to the kill ring.

** Minibuffer changes:

*** In C-x d, if you type M-n you get the visited file name of the
current buffer.

*** In Dired, a list of commands for ! extracted from mailcap according to
file extensions are added to the default list accessible by M-n.

*** A list of regexp default values is available via M-n for `occur',
`keep-lines', `flush-lines' and `how-many'.  This list includes the active
region in transient-mark-mode, the word under the cursor, the last isearch
regexp, the last isearch string and the last replacement regexp.

*** isearch started in the minibuffer searches in the minibuffer history.
Reverse isearch commands (C-r, C-M-r) search in previous minibuffer
history elements, and forward isearch commands (C-s, C-M-s) search in
next history elements.  When the reverse search reaches the first history
element, it wraps to the last history element, and the forward search
wraps to the first history element.  When the search is terminated, the
history element containing the search string becomes the current.


* New Modes and Packages in Emacs 23.1

** FIXME add details of new packages imported from lisp/gnus.
[Maybe some information from doc/misc/gnus-coding.texi can be reused]

** The package doc-view.el has been added.  It supports viewing of PDF,
PostScript and DVI documents inside an Emacs buffer by converting the
document to a set of PNG images first.  One can also search for a
regular expression in the document.  The commentary of the file explains
its usage.

** The nXML package has been added.  It is a new mode for editing XML
documents.  nXML mode allows a schema to be associated with the XML
document being edited.  nXML mode uses Relax NG as its schema
language.  The schema is used to provide two key features:

*** Continuous validation.  nXML validates as you type, highlighting
any invalid parts of your document.

*** Completion.  nXML can assist you in entering an element name,
attribute name or data value by using information about what is
allowed by the schema in that context.

** A new game called `bubbles' has been added.  This is a version of
the "Same Game" with configurable difficulty level.

** minibuffer-indicate-depth-mode shows the minibuffer depth in the prompt.

** Remember Mode (remember.el) is now included with Emacs.  It is a
mode for quickly jotting down things to remember.  Included with
remember.el is a backend that can save notes to a Diary file.  Please
consult the Remember Manual for usage details.

** D-Bus language bindings for Elisp are provided by the package
dbus.el and by extensions to the C modules of Emacs.  D-Bus is an
inter-process communication mechanism for applications residing on the
same host, based on messages.  See the manual for further details.

** EasyPG is now part of the Emacs distribution.  It is an all-in-one
GnuPG interface which includes GnuPG keyring browser, cryptographic
operations on regions and files, and automatic encryption of *.gpg
files.  See the EasyPG Assistant User's Manual for further details.

** json.el is now included with Emacs.  It is a library for parsing
and generating JSON (JavaScript Object Notation).  JSON is a
lightweight data-interchange format.

** Auto Composition Mode is a minor mode that composes characters
automatically when they are displayed.  It is globally on by default.
It uses `auto-composition-function' (default `auto-compose-chars').


* Changes in Specialized Modes and Packages in Emacs 23.1

** A new `whitespace' package has been installed, and the pre-existing one
renamed to `old-whitespace'.
[FIXME someone explain why this is good, if it is...]

** In Change Log mode, the new function `change-log-find-file', bound to
C-c C-f, finds the file associated with the current log entry.

** abbrev was rewritten in Elisp and extended with more flexibility.
*** New functions: abbrev-get, abbrev-put, abbrev-table-get, abbrev-table-put,
    abbrev-table-p.
*** Special hook `abbrev-expand-functions' obsoletes `pre-abbrev-expand-hook'.
*** `make-abbrev-table', `define-abbrev', `define-abbrev-table' all take
    extra arguments for arbitrary properties.
*** New variable `abbrev-minor-mode-table-alist'.
*** `local-abbrev-table' can hold a list of abbrev-tables.
*** Abbrevs have now the following special properties:
    `:count', `:system', `:enable-function', `:case-fixed'.
*** Abbrev-tables have now the following special properties:
    `:parents', `:case-fixed', `:enable-function', `:regexp',
    `abbrev-table-modiff'.

** Help mode.
*** New macro `with-help-window' should set up help windows better
than `with-output-to-temp-buffer' with `print-help-return-message'.
*** New option `help-window-select' permits to customize whether help
window shall be automatically selected when invoking help.
*** New variable `help-window-point-marker' permits to specify new
position of point in help window (for example in `view-lossage').

** view-remove-frame-by-deleting is now by default t
since users found iconification of view-mode frames distracting.

** Isearch mode

*** New command `isearch-occur' bound to `M-s o' in isearch mode
runs `occur' with the current search string.

*** isearch can now search through multiple ChangeLog files.
When running isearch in a ChangeLog file, if the search fails,
then another C-s tries searching the previous ChangeLog,
if there is one (e.g. go from ChangeLog to ChangeLog.12).

This is enabled if isearch-buffers-multi is non-nil.

*** The part of an isearch that failed to match is highlighted in `isearch-fail'
face.

** smerge-refine highlights word-level details of changes in conflict.
It's used automatically as you move through conflicts, see smerge-auto-refine.

** Diff mode

*** diff-refine-hunk highlights word-level details of changes in a diff hunk.
It's used automatically as you move through hunks, see
diff-auto-refine.  It is bound to `C-c C-b'.

*** diff-add-change-log-entries-other-window iterates through the diff
buffer and tries to create ChangeLog entries for each change.
It is bound to `C-x 4 A'.

** archive-mode has basic support to browse Rar archives.

** talk.el has been extended for multiple tty support.

** compilation-auto-jump-to-first-error tells `compile' to jump to
the first error encountered during compilations.

** In the `copyright' package, you can specify your copyright holders' names.
Only copyright lines with holders matching copyright-names-regexp will be
considered for update.

** eldoc highlights the function argument under point
with the face `eldoc-highlight-function-argument'.

** hide-ifdef-mode permits to shadow ifdef-blocks instead of hiding them.
See option `hide-ifdef-shadow' and function `hide-ifdef-toggle-shadowing'.

+++
** defcustom accepts new keyword arguments, `:safe' and `:risky', which
set a variable's `safe-local-variable' and `risky-local-variable' property.

** Etags changes.
*** The --members option is now the default.

Use --no-members if you want the old default behaviour of not tagging
struct members in C, members variables in C++ and variables in PHP.

** VC
*** Clicking on the VC mode-line entry now pops the VC menu.

*** The VC mode-line entry now has a tooltip that explains the VC file status.

*** VC now supports applying VC operations to a set of files at a time.

This enables VC to work much more effectively with changeset-oriented
version-control systems such as Subversion, GNU Arch, Mercurial, and
Bzr.  VC will now pass a multiple-file commit to these systems
as a single changeset.

*** In VC Annotate mode, you can type V to toggle the annotation visibility.

*** In VC Annotate mode, you can type f to show the file revision on
the current line.

** log-edit now has a command bound to C-c C-d to show the diff for
the files involved.

** sgml-electric-tag-pair-mode lets you simultaneously edit matched tag pairs.

** The appearance of superscript and subscript in TeX is more customizable.
See the documentation of the variables: tex-fontify-script,
tex-font-script-display, tex-suscript-height-ratio, and
tex-suscript-height-minimum.

** BibTeX mode:

*** New command `bibtex-initialize' (re)initializes BibTeX buffers.

*** New `bibtex-entry-format' options `whitespace', `braces', and
`string', disabled by default.

*** New variable `bibtex-cite-matcher-alist' contains rules to
identify cited keys in BibTeX entries, used by `bibtex-find-crossref'.

*** Command `bibtex-url' allows multiple URLs per entry.

+++
** Tramp

*** New connection methods.
The new methods "plinkx", "plink2", "psftp", "sftp" and "fish" have
been introduced.  There are also new so-called gateway methods
"tunnel" and "socks".

*** Multihop syntax has been removed.
The pseudo-method "multi" has been removed.  Instead of, multi hops
can be specified by the new variable `tramp-default-proxies-alist'.

*** More default settings.
Default values can be set via the variables `tramp-default-user',
`tramp-default-user-alist' and `tramp-default-host'.

*** Connection information is cached.
In order to reduce connection setup, information about used
connections are kept persistent in a file.  The name of this file is
defined in the variable `tramp-persistency-file-name'.

*** Control of remote processes.
Running processes on a remote host can be controlled by settings in
`tramp-remote-path' and `tramp-remote-process-environment'.

*** Success of remote copy is checked.
When the variable `file-precious-flag' is set, the success of a remote
file copy is checked via the file's checksum.

** Miscellaneous programming mode changes

*** The file etc/emacs.py now supports both Python 2 and 3, meaning
that either version can be used as inferior Python by python.el.

*** Python mode now has `pdbtrack' functionality.  When using pdb to
debug a Python program, pdbtrack notices the pdb prompt and displays
the source file and line that the program is stopped at, much the same
way as gud-mode does for debugging C programs with gdb.

*** The variable `fortran-line-length' can change the fixed-form line-length.

*** In Fortran mode, M-; is now bound to the standard comment-dwim,
rather than fortran-indent-comment.

+++
*** (The increasingly misnamed) F90 mode supports Fortran 2003 syntax.

** Gnus package

*** The Gnus package has been updated

*** In Emacs 23, Gnus uses Emacs' new internal coding system `utf-8-emacs' for
saving articles drafts and ~/.newsrc.eld.  These file may not be read
correctly in Emacs 22 and below.  If you want to Gnus across different Emacs
versions, you may set `mm-auto-save-coding-system' to `emacs-mule'.

*** There are many news features, bug fixes and improvements.

See the file GNUS-NEWS or the node "No Gnus" in the Gnus manual for details.

** Miscellaneous

*** comint-mode uses `start-file-process' now (see Lisp Changes).
If `default-directory' is a remote file name, subprocesses are started
on the corresponding remote system.

*** C-x C-q in dired-mode now runs the command wdired-change-to-wdired-mode,
and C-x C-q in wdired-mode exits it with asking a question about
saving changes.

*** The new command `eshell/info' runs info in an eshell buffer.

*** The pcmpl-unix package supports hostname completion for ssh and scp.

*** WoMan tries to add locale-specific manual page directories to the
search path.  This can be disabled by setting `woman-locale' to nil.

*** The new variable `ffap-rfc-directories' specifies a list of local
directories in which `ffap-rfc' will first search for RFCs.

*** net-utils has an `iwconfig' command, similar to the existing `ifconfig'.
It is used to configure wireless interfaces.


* Changes in Emacs 23.1 on non-free operating systems

---
** IPv6 is supported on MS-Windows.
Emacs now supports IPv6 on Windows XP and later, and earlier versions
of Windows with third party IPv6 stacks installed.  Previously IPv6 was
supported on other platforms, but not on Windows due to using the winsock
1.1 header file, even though Emacs was linking to the winsock 2 library.

** More keys available on MS-Windows.
Keys normally associated with IMEs, and some exotic keys not normally found
on standard keyboards have been given names so they can be bound to functions
inside Emacs.  If there are keys on your keyboard that have not been exposed
to Emacs in the past, try C-h k to see if they are available now.

Emacs can now bind functions to the extra buttons for media player and
browser control present on some keyboards.  These buttons are disabled
by default, since enabling them prevents their system-wide use when
Emacs has focus.  To enable them, set the variable
w32-pass-multimedia-buttons to nil.  See the doc string of that variable
for the list of extra keys that are available.

* Incompatible Lisp Changes in Emacs 23.1

** The behavior of map-char-table has changed.  It may call the
specified function with a cons (FROM . TO) as a key if characters in
that range have the same value.

** The value of the function `charset-id' is now always 0.

** The functions `register-char-codings' and `coding-system-spec'
have been removed.

** The cpXXX coding systems are now supported automatically.  The
functions cp-...-codepage, which you had to use in Emacs 22 to enable
support for these coding systems, have been deleted.

+++
** The function `dired-call-process' has been removed.

** The variable `byte-compile-warnings' can now be a list starting with `not',
meaning to disable the specified warnings.  The meaning of this list
may therefore be the reverse of what you expect (of course, this is
only an issue if you make use of the new `not' syntax).  Rather than
checking/manipulating elements directly, use the new functions
`byte-compile-warning-enabled-p', `byte-compile-disable-warning', and
`byte-compile-enable-warning.'

** `mode-name' is no longer guaranteed to be a string.
Use `(format-mode-line mode-name)' to ensure a string value.

** The following features have been removed.  They were used for
displaying various scripts with specific fonts, and are no longer
needed now that OpenType font support is available:

*** `devanagari' and `devan-util', and all associated devanagari-* and
dev-* functions and variables (formerly used for Devanagari script).

*** `kannada' and `knd-util', and all associated kannada-* and knd-*
functions and variables (formerly used for Kannada script).

*** `malayalam' and `mlm-util', and all associated malayalam-* and
mlm-* functions and variables (formerly used for Malayalam script).

*** `tamil' and `tml-util, and all associated tamil-* and tml-*
functions and variables (formerly used for Tamil script).


* Lisp Changes in Emacs 23.1

** The new `buffer-swap-text' function can swap the text between two buffers.
This can be useful for modes such as tar-mode, archive-mode, RMAIL.

** `clear-image-cache' can be told to flush only images of a specific file.

** clone-indirect-buffer now runs the clone-indirect-buffer-hook.

** `beginning-of-defun-function' now takes one argument, the count
 given to `beginning-of-defun'.

** The variable `inhibit-changing-match-data', if non-nil, prevents the
search and match primitives from changing the match data.

+++
** New function `match-substitute-replacement' returns the result of
`replace-match' without actually using it in the buffer.

** If a local hook function has a non-nil `permanent-local-hook'
property, then `kill-all-local-variables' does not remove it from
the local value of the hook variable.  This means it remains
even if you change major modes.

+++
** A list of default values can be specified for the DEFAULT argument of
functions `read-from-minibuffer', `read-string', `read-command',
`read-variable', `read-buffer', `completing-read'.  Elements of this list
are available for inserting into the minibuffer by typing `M-n'.
For empty input these functions return the first element of this list.

** `custom-note-var-changed' tells Custom to treat the change in a certain
variable as having been made within Custom.

** `frame-inherited-parameters' lets new frames inherit parameters from
the selected frame.

** Commands should use `use-region-p' to test whether there is
an active region that they should operate on.

** `region-active-p' returns non-nil when Transient Mark mode
is enabled and there is an active region.  This is NOT the best function
to use to test whether a command should operate on the region instead
of the usual behavior -- for that, use `use-region-p'.

** New keymap `input-decode-map' overrides like key-translation-map, but
applies before function-key-map.  Also it is terminal-local contrary to
key-translation-map.  Terminal-specific key-sequences are generally added to
this map rather than to function-key-map now.

** The new macro `declare-function' suppresses compiler warnings about
undefined functions.  The new `check-declare' package verifies that such
statements are accurate (i.e. the functions are actually defined in
the specified files).

** The new function `read-color' reads a color name using the minibuffer.

** The new function `face-all-attributes' returns an alist
describing all the basic attributes of a given face.

** `interprogram-paste-function' can now return one string or a list
of strings.  In the latter case, Emacs puts the second and following
strings on the kill ring.

** Character code, representation, and charset changes.

The character code space is now 0x0..0x3FFFFF with no gap.
Characters of code 0x0..0x10FFFF are Unicode characters of the same code points.
Characters of code 0x3FFF80..0x3FFFFF are raw 8-bit bytes.

Generic characters no longer exist.

In buffer and string, characters are represented by UTF-8 byte
sequence in a multibyte buffer/string.

The concept of a charset has changed.  A single character may belong to
multiple charsets (e.g. a-grave, U+00E0, belongs to charsets unicode,
iso-8859-1, iso-8859-3, etc).

*** The new function `characterp' returns t if and only if the argument
is a character.  This replaces `char-valid-p', which is now obsolete.

*** The new function `max-char' returns the maximum character code
(currently it is #x3FFFFF).

*** The functions `encode-char' and `decode-char' now accept any character sets.

*** The function `define-charset' now accepts a completely different
form of arguments (old-style arguments still work).

*** The new function `define-charset-alias' defines an alias of a charset.

*** The value of the function `char-charset' depends on the current
priorities of charsets.

*** The new function `charset-priority-list' returns the list of
charsets ordered by priority.

*** The new function `set-charset-priority' sets priorities of charsets.

*** The new function `unibyte-charset' returns the current unibyte
charset.  The unibyte charset determines how unibyte/multibyte
conversion is done.

*** The new function `set-unibyte-charset' sets the unibyte charset.

*** The new function `unibyte-string' make a unibyte string from bytes.

*** The new function `define-char-code-property' defines a character
code property.

*** The new function `char-code-property-description' returns the
description string of a character code property.

*** The function get-char-code-property now accepts many Unicode base
character properties.  They are `name', `general-category',
`canonical-combining-class', `bidi-class', `decomposition',
`decimal-digit-value', `digit-value', `numeric-value', `mirrored',
`old-name', `iso-10646-comment', `uppercase', `lowercase', and
`titlecase'.

*** The new variable `find-word-boundary-function-table' is a
char-table of functions to search for a word boundary.

*** The new variable `char-script-table' is a char-table of script names.

*** The new variable `char-width-table' is a char-table of character widths.

*** The new variable `print-charset-text-property' controls how to
handle `charset' text property on printing a string.

*** The new variable `printable-chars' is a char-table defining if a
character is printable or not.

*** The functions `modify-syntax-entry' and `modify-category-entry' now
accepts a cons of characters as the first argument, and modify all
entries in that range of characters.

** Code conversion changes.

*** The new function `define-coding-system' should be used to define a
coding system instead of `make-coding-system' (which is now obsolete).

*** The functions `encode-coding-region' and `decode-coding-region'
have an optional 4th argument to specify where the result of
conversion should go.

*** The functions `encode-coding-string' and `decode-coding-string'
have an optional 4th argument specifying a buffer to store the result
of conversion.

*** The new function `with-coding-priority' executes the body part with
the specified coding system priority order.

*** The new function `check-coding-systems-region' checks if the text
in the region is encodable by the specified coding systems.

*** The new function `coding-system-aliases' returns a list of aliases
of a coding system.

*** The new function `coding-system-charset-list' returns a list of
charsets supported by a coding system.

*** The new function `coding-system-priority-list' returns a list of
coding systems ordered by their priorities.

*** The new function `set-coding-system-priority' sets priorities of
coding systems.

*** The functions `set-coding-priority' and `make-coding-system' are obsolete.

** There is a new input method, Robin, different from Quail.
It has three functionalities:
 i) a simple input method (converts an ASCII sequence into a string).
ii) converts an existing buffer substring into another string
iii) reverse conversion (each character produced by a
robin rule can hold the original ASCII sequence as a char-code-property)

*** The new function `robin-define-package' defines a Robin package.

*** The new function `robin-modify-package' modifies an existing Robin package.

*** The new function `robin-use-package' starts using a Robin package
as an input method.

** Changes related to the new font backend.

Which font backends to use can be specified by the X resource "FontBackend".
For instance, to use both X core fonts and Xft fonts:

Emacs.FontBackend: x,xft

If this resource is not set, Emacs tries to use all font backends
available on your graphic device.

*** New frame parameter `font-backend' specifies a list of
font-backends supported by the frame's graphic device.  On X, they are
currently `x' and `xft'.

*** New function `fontp' checks if the argument is a font-spec or font-entity.

*** New function `font-spec' creates a new font-spec object.

*** New function `font-get' returns a font property value.

*** New function `font-put' sets a font property value.

*** New function `list-fonts' returns a list of font-entities matching
the given specification.

*** New function `list-families' returns a list of family names of
available fonts.

*** New function `font-font' returns a font-entity best matching with
the given specification.

*** New function `font-xlfd-name' returns an XLFD name of a given font
(font-spec, font-entity, or font-object).

*** New function `clear-font-cache' clears all font caches.

*** The function `set-fontset-font' now accepts a script name as the
second argument, and has an optional 5th argument to control how to
set the font.

** Changes related to multiple tty support.

*** $TERM is now set to `dumb' for subprocesses.  If you want to know the
$TERM inherited by Emacs you will have to look inside initial-environment.

*** $DISPLAY is now dynamically inherited from the frame's `display'.

*** The `window-system' variable has been made frame-local.  The new
`initial-window-system' variable contains the `window-system' value
for the first frame.

*** You can specify a terminal device (`tty' parameter) and a terminal
type (`tty-type' parameter) to `make-terminal-frame'.

*** The new function `make-frame-on-tty' allows you to create a new
frame on another tty device interactively.

*** The function `make-frame-on-display' now works during a tty
session, and `make-frame-on-tty' works during a graphical session.

*** New functions: `delete-tty', `suspend-tty', `resume-tty'.

*** A new data type for terminals with functions: `get-device-terminal',
`terminal-parameters', `terminal-parameter', `set-terminal-parameter'.

*** New hooks: `suspend-tty-functions' and `resume-tty-functions'
are called after a tty frame has been suspended or resumed,
respectively.  The functions are called with the terminal id of the frame
being suspended/resumed as a parameter.

*** New function: `environment'.

*** New variable: `local-function-key-map'.
This in addition to the global function-key-map variable that
already existed.  The global variable is not used directly any more;
instead, the local-function-key-map is initialized so as to inherit from
function-key-map.

*** `initial-environment' holds the environment inherited from Emacs's parent.

*** The `keyboard-translate-table' variable and the terminal and
keyboard coding systems have been made terminal-local.

*** In addition to the global function-key-map, Emacs has terminal-local
local-function-key-map variables, and uses them instead of the
global keymaps to set up translations and function key sequences
relevant to a specific terminal device.


** You can now also pass the value of the `invisible' property to invisible-p
to check whether it would cause the text to be invisible.  Convenient when
checking invisibility of text which has no buffer position
(e.g. in before/after-strings).

** Non-breaking space now acts as whitespace.

+++
** In `condition-case', a handler can specify "let the debugger run first".

You do this by writing `debug' in the list of conditions to be handled,
like this:

    (condition-case nil
	(foo bar)
      ((debug error) nil))

** The `require-match' argument to `completing-read' accepts a new value
`confirm-only'.

+++
** The regexp form \(?<num>:<regexp>\) specifies the group number explicitly.

** New function `window-full-width-p' returns t if a window is as wide
as its frame.

** The new function `split-string-and-unquote' does (what?)

** The new function `combine-and-quote-strings' does (what?)

** The new function `image-refresh' refreshes all images associated
with a given image specification.

+++
** New variable `user-emacs-directory'.
Use this instead of "~/.emacs.d".

+++
** The new function `start-file-process' is similar to `start-process',
but obeys file handlers.  The file handler is chosen based on
`default-directory'.  The functions `start-file-process-shell-command'
and `process-file-shell-command' are also new; they call internally
`start-file-process' and `process-file', respectively.

** The new function `process-lines' executes an external program and
returns its output as a list of lines.

+++
** `file-remote-p' has new optional parameters IDENTIFICATION and CONNECTED.
IDENTIFICATION specifies which part of the remote identifier has to be
returned.  With CONNECTED passed non-nil, it is checked whether a
remote connection has been established already.

** The two new functions `looking-at-p' and `string-match-p' can do
the same matching as `looking-at' and `string-match' without changing
the match data.

** The interactive-form of a function can be added post-facto via the
`interactive-form' symbol property.  Mostly useful to add complex interactive
forms to subroutines.

* New Packages for Lisp Programming in Emacs 23.1

** The package isearch-multi.el has been added.  It implements a new mode
`isearch-buffers-minor-mode' that allows isearch to search through
multiple buffers.  In this mode a new variable
`isearch-buffers-next-buffer-function' defines the function to call
to get the next buffer to search in the series of multiple buffers.

** The new package avl-tree.el deals with the AVL tree data structure.


----------------------------------------------------------------------
This file is part of GNU Emacs.

GNU Emacs is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3, or (at your option)
any later version.

GNU Emacs is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with GNU Emacs; see the file COPYING.  If not, write to the
Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
Boston, MA 02110-1301, USA.


Local variables:
mode: outline
paragraph-separate: "[ 	]*$"
end:

arch-tag: e759449d-88b3-4de4-9900-3a6c3dfa23e2
